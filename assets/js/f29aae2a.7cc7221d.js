"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[69],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=d(n),p=i,f=m["".concat(s,".").concat(p)]||m[p]||l[p]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2247:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return l}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],c={id:"intermediate-code",sidebar_position:0},s=void 0,d={unversionedId:"semantic-analysis/intermediate-code/intermediate-code",id:"semantic-analysis/intermediate-code/intermediate-code",title:"intermediate-code",description:"",source:"@site/comp/semantic-analysis/intermediate-code/00_intermediate-code.md",sourceDirName:"semantic-analysis/intermediate-code",slug:"/semantic-analysis/intermediate-code/intermediate-code",permalink:"/comp/semantic-analysis/intermediate-code/intermediate-code",draft:!1,editUrl:"https://github.com/lixk28/wiki/tree/main/comp/semantic-analysis/intermediate-code/00_intermediate-code.md",tags:[],version:"current",lastUpdatedBy:"snow",lastUpdatedAt:1653835724,formattedLastUpdatedAt:"5/29/2022",sidebarPosition:0,frontMatter:{id:"intermediate-code",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Syntax-Directed Translation",permalink:"/comp/semantic-analysis/syntax-directed-translation"},next:{title:"Three-Address Code",permalink:"/comp/semantic-analysis/intermediate-code/three-address-code"}},u={},l=[],m={toc:l};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}))}p.isMDXComponent=!0}}]);