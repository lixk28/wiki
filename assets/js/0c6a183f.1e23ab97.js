"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[982],{3905:function(e,a,t){t.d(a,{Zo:function(){return o},kt:function(){return N}});var n=t(7294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function m(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?m(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},m=Object.keys(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=n.createContext({}),p=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},o=function(e){var a=p(e.components);return n.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},k=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,m=e.originalType,i=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),k=p(t),N=s,h=k["".concat(i,".").concat(N)]||k[N]||c[N]||m;return t?n.createElement(h,r(r({ref:a},o),{},{components:t})):n.createElement(h,r({ref:a},o))}));function N(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var m=t.length,r=new Array(m);r[0]=k;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,r[1]=l;for(var p=2;p<m;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},2417:function(e,a,t){t.r(a),t.d(a,{assets:function(){return c},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return k}});var n=t(7462),s=t(3366),m=(t(7294),t(3905)),r=t(2969),l=["components"],i={id:"symbol-table",sidebar_position:2},p="Symbol Table",o={unversionedId:"semantic-analysis/symbol-table",id:"semantic-analysis/symbol-table",title:"Symbol Table",description:"What is Symbol Table",source:"@site/comp/semantic-analysis/02_symbol-table.md",sourceDirName:"semantic-analysis",slug:"/semantic-analysis/symbol-table",permalink:"/comp/semantic-analysis/symbol-table",draft:!1,editUrl:"https://github.com/lixk28/wiki/tree/main/comp/semantic-analysis/02_symbol-table.md",tags:[],version:"current",lastUpdatedBy:"snow",lastUpdatedAt:1655876795,formattedLastUpdatedAt:"6/22/2022",sidebarPosition:2,frontMatter:{id:"symbol-table",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Syntax-Directed Translation",permalink:"/comp/semantic-analysis/syntax-directed-translation"},next:{title:"intermediate-code",permalink:"/comp/intermediate-code/intermediate-code"}},c={},k=[{value:"What is Symbol Table",id:"what-is-symbol-table",level:2},{value:"Binding and Scoping",id:"binding-and-scoping",level:2},{value:"Implementation of Symbol Table",id:"implementation-of-symbol-table",level:2},{value:"Symbol Table Structure",id:"symbol-table-structure",level:3},{value:"Handling Symbol Table with Scopes",id:"handling-symbol-table-with-scopes",level:3},{value:"Symbol Table Entry",id:"symbol-table-entry",level:3},{value:"Type and Type Checking",id:"type-and-type-checking",level:2}],N={toc:k};function h(e){var a=e.components,t=(0,s.Z)(e,l);return(0,m.kt)("wrapper",(0,n.Z)({},N,t,{components:a,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"symbol-table"},"Symbol Table"),(0,m.kt)("h2",{id:"what-is-symbol-table"},"What is Symbol Table"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"Symbol table (\u7b26\u53f7\u8868)")," is a important data structure for compilers that tracks information about all program symbols. (\u7b26\u53f7\u8868\u662f\u7f16\u8bd1\u5668\u4e2d\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8bb0\u5f55\u7a0b\u5e8f\u4e2d\u6bcf\u4e2a\u7b26\u53f7\u7684\u4fe1\u606f)"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"Each entry in symbol table represents a defintion of a identifier (\u6bcf\u4e2a\u8868\u9879\u8bb0\u5f55\u4e00\u4e2a\u6807\u8bc6\u7b26\u7684\u5b9a\u4e49)"),(0,m.kt)("li",{parentName:"ul"},"Will be updated whenever scopes are entered or exited (\u6bcf\u5f53\u8fdb\u5165\u6216\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u5fc5\u987b\u66f4\u65b0\u7b26\u53f7\u8868)"),(0,m.kt)("li",{parentName:"ul"},"Used to perform binding of identifier uses at current point (\u7528\u4e8e\u786e\u5b9a\u6807\u8bc6\u7b26\u7684\u7ed1\u5b9a\u60c5\u51b5)")),(0,m.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,m.kt)("div",{parentName:"div",className:"admonition-heading"},(0,m.kt)("h5",{parentName:"div"},(0,m.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,m.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,m.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Symbol")),(0,m.kt)("div",{parentName:"div",className:"admonition-content"},(0,m.kt)("p",{parentName:"div"},"symbol = variable's name = identifier"))),(0,m.kt)("p",null,"Symbol table can be built in two approaches:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"Traversing the parse tree in a seperate pass after parsing (\u904d\u5386\u5206\u6790\u6811\u751f\u6210\u7b26\u53f7\u8868)"),(0,m.kt)("li",{parentName:"ul"},"Using semantic actions embedded in parsing stage (\u5728\u5206\u6790\u8fc7\u7a0b\u4e2d\u751f\u6210\u7b26\u53f7\u8868)")),(0,m.kt)("p",null,"Symbol table is usually created in the semantic analysis phase, but many compilers set up a table at lexical analysis stage for the various variables in the program. (\u901a\u5e38\u5728\u8bcd\u6cd5\u5206\u6790\u9636\u6bb5\u5c31\u5f00\u59cb\u51c6\u5907)"),(0,m.kt)("p",null,"Symbol table is used in code generation to output assembler directives of the appropriate size and type. (\u7528\u4e8e\u7c7b\u578b\u68c0\u67e5\u3001\u4ee3\u7801\u751f\u6210\u7b49)"),(0,m.kt)("p",null,"Symbol table is usually discared after generating executable binary, because machine code instructions no longer need symbol informations. For use in debuggers, symbol tables may be included. (\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u540e\uff0c\u7b26\u53f7\u8868\u901a\u5e38\u88ab\u4e22\u5f03\uff0c\u4f46\u8c03\u8bd5\u5668\u53ef\u80fd\u9700\u8981\u7b26\u53f7\u8868\u4fe1\u606f\u5305\u542b\u5728\u4e8c\u8fdb\u5236\u4e2d)"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"To display symbol names instead of addresses in debuggers (\u5982\u679c\u4e0d\u5305\u542b\u7b26\u53f7\u8868\u4fe1\u606f\uff0c\u8c03\u8bd5\u65f6\u65e0\u6cd5\u67e5\u770b\u53d8\u91cf\u7684\u4fe1\u606f)"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"-g")," option for gcc to include debug symbol tables")),(0,m.kt)("h2",{id:"binding-and-scoping"},"Binding and Scoping"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"Binding (\u7ed1\u5b9a)")," matches identifier use with definition. (\u5339\u914d\u7b26\u53f7\u7684\u4f7f\u7528\u548c\u5b9a\u4e49)"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"Definition: Associating an id with a memory allocation"),(0,m.kt)("li",{parentName:"ul"},"Binding associates an id use with a location, and is an essential step before machine code generation")),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"Scope (\u4f5c\u7528\u57df)")," is a program region where a definition can be bound. (\u53ef\u4ee5\u4e0e\u5b9a\u4e49\u7ed1\u5b9a\u7684\u7a0b\u5e8f\u533a\u57df)"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"Uses of identifier in the scope is bound to that definition"),(0,m.kt)("li",{parentName:"ul"},"Uses not in scope of any definition results in undefined error"),(0,m.kt)("li",{parentName:"ul"},"Scopes for the same identifier can never overlap, there is at most one binding for a identifier at any time")),(0,m.kt)("p",null,"Two types of scoping:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"Static scoping (\u9759\u6001\u4f5c\u7528\u57df)"),": Scopes formed by where definitions are in program text (\u7a0b\u5e8f\u4ee3\u7801\u51b3\u5b9a)"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"Rule: ",(0,m.kt)("u",null,"Bind to the closest ",(0,m.kt)(r.Z,{color:"#3578e5",mdxType:"Highlight"},"enclosing")," definition")),(0,m.kt)("li",{parentName:"ul"},"Also known as ",(0,m.kt)("strong",{parentName:"li"},"lexical scoping (\u8bcd\u6cd5\u4f5c\u7528\u57df)")),(0,m.kt)("li",{parentName:"ul"},"C/C++, Java, Python, Javascript")),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",{parentName:"pre",className:"language-c"},"void foo()\n{\n  int x = 0;\n  {\n    char x = 'x';\n  }\n  x = x + 1;  // x will be 1\n}\n"))),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"Dynamic scoping (\u52a8\u6001\u4f5c\u7528\u57df)"),": Scopes formed by when definitions happen during runtime (\u8fd0\u884c\u65f6\u51b3\u5b9a)"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"Rule: ",(0,m.kt)("u",null,"Bind to the most recent definition in current execution")),(0,m.kt)("li",{parentName:"ul"},"Perl, Bash, Lisp, Scheme")),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",{parentName:"pre",className:"language-bash"},'#!/usr/bin/bash\ngreeting="uh oh"\ngreeting="hello, world!"\necho $greeting  # print hello world\n')))),(0,m.kt)("div",{className:"admonition admonition-question"},(0,m.kt)("div",{parentName:"div",className:"admonition-heading"},(0,m.kt)("h5",{parentName:"div"},(0,m.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,m.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:"16",height:"16"},(0,m.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm9 3a1 1 0 11-2 0 1 1 0 012 0zM6.92 6.085c.081-.16.19-.299.34-.398.145-.097.371-.187.74-.187.28 0 .553.087.738.225A.613.613 0 019 6.25c0 .177-.04.264-.077.318a.956.956 0 01-.277.245c-.076.051-.158.1-.258.161l-.007.004a7.728 7.728 0 00-.313.195 2.416 2.416 0 00-.692.661.75.75 0 001.248.832.956.956 0 01.276-.245 6.3 6.3 0 01.26-.16l.006-.004c.093-.057.204-.123.313-.195.222-.149.487-.355.692-.662.214-.32.329-.702.329-1.15 0-.76-.36-1.348-.863-1.725A2.76 2.76 0 008 4c-.631 0-1.155.16-1.572.438-.413.276-.68.638-.849.977a.75.75 0 101.342.67z"}))),"Static Scoping or Dynamic Scoping")),(0,m.kt)("div",{parentName:"div",className:"admonition-content"},(0,m.kt)("p",{parentName:"div"},"Dynamic scoping:"),(0,m.kt)("ul",{parentName:"div"},(0,m.kt)("li",{parentName:"ul"},"All bindings are done at execution time"),(0,m.kt)("li",{parentName:"ul"},"Hard to figure out for both compiler and human")),(0,m.kt)("p",{parentName:"div"},"Static scoping:"),(0,m.kt)("ul",{parentName:"div"},(0,m.kt)("li",{parentName:"ul"},"Leads to fewer programmer errors, bindings are determined by lexical structure of source code"),(0,m.kt)("li",{parentName:"ul"},"Leads to more efficient code, compilers can determine bindings at compile time and translate identifier directly to memory location")))),(0,m.kt)("h2",{id:"implementation-of-symbol-table"},"Implementation of Symbol Table"),(0,m.kt)("h3",{id:"symbol-table-structure"},"Symbol Table Structure"),(0,m.kt)("p",null,"Symbol table is an important data stucture in compiler, the performance of compiler's frontend (lexical, syntax, semantic analysis) is affected by symbol table access time. (\u7b26\u53f7\u8868\u8bbf\u95ee\u65f6\u95f4\u5f71\u54cd\u524d\u7aef\u6027\u80fd)"),(0,m.kt)("p",null,"Common data structures for symbol table:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"List",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"Array"),(0,m.kt)("li",{parentName:"ul"},"Linked List"))),(0,m.kt)("li",{parentName:"ul"},"Binary tree"),(0,m.kt)("li",{parentName:"ul"},"Hash table")),(0,m.kt)("p",null,"Most compilers choose hash table for its quick access time. (\u5927\u591a\u6570\u7f16\u8bd1\u5668\u90fd\u4f7f\u7528\u54c8\u5e0c\u8868\u6765\u5b58\u50a8\u7b26\u53f7)"),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:"center"},"Data Structure"),(0,m.kt)("th",{parentName:"tr",align:"center"},"Insert/Delete Time"),(0,m.kt)("th",{parentName:"tr",align:"center"},"Search Time"),(0,m.kt)("th",{parentName:"tr",align:"center"},"Space"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:"center"},"Array"),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},"No extra space")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:"center"},"Linked List"),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},"Extra pointer space")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:"center"},"Binary Tree"),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mtext",{parentName:"mrow"},"log"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\text{log}n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord text"},(0,m.kt)("span",{parentName:"span",className:"mord"},"log")),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mtext",{parentName:"mrow"},"log"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\text{log}n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord text"},(0,m.kt)("span",{parentName:"span",className:"mord"},"log")),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},"more pointer space")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:"center"},"Hash Table"),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},"way more space")))),(0,m.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,m.kt)("div",{parentName:"div",className:"admonition-heading"},(0,m.kt)("h5",{parentName:"div"},(0,m.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,m.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,m.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,m.kt)("div",{parentName:"div",className:"admonition-content"},(0,m.kt)("ul",{parentName:"div"},(0,m.kt)("li",{parentName:"ul"},"For linked list, we can move recently used identifier to the head (\u5c06\u6700\u8fd1\u4f7f\u7528\u7684\u6807\u8bc6\u7b26\u79fb\u5230\u8868\u5934)"),(0,m.kt)("li",{parentName:"ul"},"For binary tree, ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mtext",{parentName:"mrow"},"log"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\text{log}n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord text"},(0,m.kt)("span",{parentName:"span",className:"mord"},"log")),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))," is average case (or balanced tree), in the worst case, binary tree may reduce to linked list (\u6700\u574f\u60c5\u51b5\u4e0b\u4e8c\u53c9\u6811\u9000\u5316\u6210\u94fe\u8868)"),(0,m.kt)("li",{parentName:"ul"},"For hash table, insert/delete/search time can become ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))," if with frequent conflicts and long chains, and the size of hash table is way more large than the number of identifiers (\u5982\u679c\u51b2\u7a81\u9891\u7e41\u4e14\u94fe\u592a\u957f\uff0c\u54c8\u5e0c\u8868\u7ef4\u62a4\u65f6\u95f4\u4f1a\u6709\u4e00\u5b9a\u5f00\u9500\uff0c\u800c\u4e14\u54c8\u5e0c\u8868\u4f53\u79ef\u8fdc\u5927\u4e8e\u6807\u8bc6\u7b26\u6570\u91cf)")))),(0,m.kt)("p",null,"Maintaining symbol table:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"enter_scope()"),": start a new scope"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"exit_scope()"),": exit current scope"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"find_symbol(x)"),": find the information about symbol x"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"add_symbol(x)"),": add symbol x to the symbol table"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"check_symbol(x)"),": check if symbol x is defined in current scope")),(0,m.kt)("h3",{id:"handling-symbol-table-with-scopes"},"Handling Symbol Table with Scopes"),(0,m.kt)("p",null,"Organize all symbol tables into a scope stack"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"An individual symbol table for each scope, stack holds on entry for each ",(0,m.kt)("u",null,"open scope")),(0,m.kt)("li",{parentName:"ul"},"The innermost scope (current scope) is on the top of stack"),(0,m.kt)("li",{parentName:"ul"},"Stack push/pop when entering/exiting a scope",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"Create a new symbol table to hold all variables declared in that scope"),(0,m.kt)("li",{parentName:"ul"},"Push/pop the pointer to the symbol table")))),(0,m.kt)("p",null,"TODO: an image here."),(0,m.kt)("p",null,"Cons of stacking symbol tables:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"Inefficient searching due to multiple hash table lookups: Search from the top of stack, and look up all the symbol tables held by the stack in worst case. All global variables will be at the bottom of the stack."),(0,m.kt)("li",{parentName:"ul"},"Inefficient use of memory due to multiple hash tables: The number of symbol tables is the number of current anticipated scopes.")),(0,m.kt)("p",null,"Single symbol table for all scopes using chaining (preferred):"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"For each identifier, insert at the front of chain with scope level k, search will fetch the front of chain"),(0,m.kt)("li",{parentName:"ul"},"Remove all symbols with level k when exiting level k scope")),(0,m.kt)("p",null,"TODO: an image here."),(0,m.kt)("p",null,"Pros of chaining symbol table:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"Lookup requires only a single hash table access"),(0,m.kt)("li",{parentName:"ul"},"Save memory due to single hash table")),(0,m.kt)("p",null,"Cons of chaining symbol table:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"Unsuitable for class scopes (only block scopes)"),(0,m.kt)("li",{parentName:"ul"},"Exiting scope is slightly more expensive")),(0,m.kt)("h3",{id:"symbol-table-entry"},"Symbol Table Entry"),(0,m.kt)("p",null,"TODO"),(0,m.kt)("h2",{id:"type-and-type-checking"},"Type and Type Checking"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"Type (\u7c7b\u578b)")," is a set of values and a set of operations on these values."),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"Type checking (\u7c7b\u578b\u68c0\u67e5)")," verifies type consistency across the program. (\u7c7b\u578b\u4e00\u81f4\u6027\u68c0\u67e5)"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"A program is said to be ",(0,m.kt)("strong",{parentName:"p"},"type consistent (\u7c7b\u578b\u4e00\u81f4\u7684)")," if all operators are consistent with the operand types")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"Much of what we do in semantic analysis is type checking")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"Static type checking (\u9759\u6001\u7c7b\u578b\u68c0\u67e5)")," (at compile time)")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"Dynamic type checking (\u52a8\u6001\u7c7b\u578b\u68c0\u67e5)")," (at execution time)"))))}h.isMDXComponent=!0},2969:function(e,a,t){t.d(a,{Z:function(){return s}});var n=t(7294);function s(e){var a=e.children,t=e.color;return n.createElement("span",{style:{color:t}},a)}}}]);